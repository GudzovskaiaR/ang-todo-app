{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport let TodoItemComponent = class TodoItemComponent {\n  constructor() {\n    this.toggleComplete = new EventEmitter();\n    this.delTodo = new EventEmitter();\n    this.editTodo = new EventEmitter();\n    this.isEdit = false;\n  }\n  onToggleComplete() {\n    this.toggleComplete.emit();\n  }\n  onDelTodo() {\n    this.delTodo.emit();\n  }\n  onEditTodo() {\n    this.editTodo.emit(this.todoText);\n  }\n};\n__decorate([Input()], TodoItemComponent.prototype, \"todo\", void 0);\n__decorate([Input()], TodoItemComponent.prototype, \"index\", void 0);\n__decorate([Input()], TodoItemComponent.prototype, \"todoText\", void 0);\n__decorate([Output()], TodoItemComponent.prototype, \"toggleComplete\", void 0);\n__decorate([Output()], TodoItemComponent.prototype, \"delTodo\", void 0);\n__decorate([Output()], TodoItemComponent.prototype, \"editTodo\", void 0);\nTodoItemComponent = __decorate([Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.scss']\n})], TodoItemComponent);","map":{"version":3,"names":["Component","Input","Output","EventEmitter","TodoItemComponent","constructor","toggleComplete","delTodo","editTodo","isEdit","onToggleComplete","emit","onDelTodo","onEditTodo","todoText","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Programing\\ang-todo-app\\src\\app\\components\\todo-item\\todo-item.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ITodo } from 'src/app/models/todo';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.scss'],\n})\nexport class TodoItemComponent {\n  @Input() todo: ITodo;\n  @Input() index: number;\n  @Input() todoText: string;\n\n  @Output() toggleComplete: EventEmitter<void> = new EventEmitter();\n  @Output() delTodo: EventEmitter<void> = new EventEmitter();\n  @Output() editTodo: EventEmitter<string> = new EventEmitter() \n  isEdit = false\n  onToggleComplete() {\n    this.toggleComplete.emit();\n  }\n  onDelTodo() {\n    this.delTodo.emit();\n  }\n  onEditTodo() {\n    this.editTodo.emit(this.todoText)\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAQ/D,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAAvBC,YAAA;IAKK,KAAAC,cAAc,GAAuB,IAAIH,YAAY,EAAE;IACvD,KAAAI,OAAO,GAAuB,IAAIJ,YAAY,EAAE;IAChD,KAAAK,QAAQ,GAAyB,IAAIL,YAAY,EAAE;IAC7D,KAAAM,MAAM,GAAG,KAAK;EAWhB;EAVEC,gBAAgBA,CAAA;IACd,IAAI,CAACJ,cAAc,CAACK,IAAI,EAAE;EAC5B;EACAC,SAASA,CAAA;IACP,IAAI,CAACL,OAAO,CAACI,IAAI,EAAE;EACrB;EACAE,UAAUA,CAAA;IACR,IAAI,CAACL,QAAQ,CAACG,IAAI,CAAC,IAAI,CAACG,QAAQ,CAAC;EACnC;CAED;AAlBUC,UAAA,EAARd,KAAK,EAAE,C,8CAAa;AACZc,UAAA,EAARd,KAAK,EAAE,C,+CAAe;AACdc,UAAA,EAARd,KAAK,EAAE,C,kDAAkB;AAEhBc,UAAA,EAATb,MAAM,EAAE,C,wDAAyD;AACxDa,UAAA,EAATb,MAAM,EAAE,C,iDAAkD;AACjDa,UAAA,EAATb,MAAM,EAAE,C,kDAAoD;AAPlDE,iBAAiB,GAAAW,UAAA,EAL7Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWd,iBAAiB,CAmB7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}